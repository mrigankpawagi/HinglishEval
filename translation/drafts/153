"""You will be given the name of a class (a string) and a list of extensions.
    The extensions are to be used to load additional classes to the class. The
    strength of the extension is as follows: Let CAP be the number of the uppercase
    letters in the extension's name, and let SM be the number of lowercase letters 
    in the extension's name, the strength is given by the fraction CAP - SM. 
    You should find the strongest extension and return a string in this 
    format: ClassName.StrongestExtensionName.
    If there are two or more extensions with the same strength, you should
    choose the one that comes first in the list.
    For example, if you are given "Slices" as the class and a list of the
    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should
    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension 
    (its strength is -1).
    Example:
    for Strongest_Extension('my_class', ['AA', 'Be', 'CC']) == 'my_class.AA'
    """

"""
Aapko ek class ka naam (ek string) aur ek extensions ki list di jayegi.
    Extensions ko additional classes ko class me load karne ke liye use kiya jata hai. Extension ki
    strength is prakar hai: Maan lijiye number CAP, extension ke naam me uppercase
    letters ki sankhya hai, aur number SM, extension ke naam me lowercase letters 
    ki sankhya hai, strength ka nirdharan CAP - SM ke fraction se hota hai. 
    Aapko sabse strong extension dhundhni hai aur is 
    format me ek string return karni hai: ClassName.StrongestExtensionName.
    Agar do ya do se adhik extensions ki strength same ho, to aapko
    list me sabse pehle aane wale extension ko chunna chahiye.
    Udaharan ke liye, agar aapko "Slices" class di gayi hai aur extensions ki list me
    hai: ['SErviNGSliCes', 'Cheese', 'StuFfed'] to aapko
    'Slices.SErviNGSliCes' return karna chahiye kyunki 'SErviNGSliCes' sabse strong extension 
    hai (iska strength -1 hai).
    Udaharan:
    for Strongest_Extension('my_class', ['AA', 'Be', 'CC']) == 'my_class.AA'

"""
